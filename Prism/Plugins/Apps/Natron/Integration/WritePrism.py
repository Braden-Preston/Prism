# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named WritePrismExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from WritePrismExt import *
except ImportError:
    pass


def getPluginID():
    return "WritePrism"


def getLabel():
    return "WritePrism"


def getVersion():
    return 1


def getIconPath():
    return "WritePrism.png"


def getGrouping():
    return ""


def createInstance(app, group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("onParamChanged")
    if param is not None:
        param.setValue("writePrismParamChanged")
        del param

    # Create the user parameters
    lastNode.prismPage = lastNode.createPageParam("prismPage", "Prism")
    param = lastNode.createStringParam("prismTask", "Task")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.prismTask = param
    del param

    param = lastNode.createBooleanParam("localOutput", "local output")

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.localOutput = param
    del param

    param = lastNode.createSeparatorParam("seperator1", "")

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.seperator1 = param
    del param

    param = lastNode.createStringParam("l_components", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("Components")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.l_components = param
    del param

    param = lastNode.createBooleanParam("WritePrismBaseNatronOfxParamProcessR", "R")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp(
        "When checked, this channel of the layer will be written to the file otherwise it will be skipped. Most file formats will pack the channels into the first N channels of the file. If for some reason it's not possible, the channel will be filled with 0."
    )
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.WritePrismBaseNatronOfxParamProcessR = param
    del param

    param = lastNode.createBooleanParam("WritePrismBaseNatronOfxParamProcessG", "G")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp(
        "When checked, this channel of the layer will be written to the file otherwise it will be skipped. Most file formats will pack the channels into the first N channels of the file. If for some reason it's not possible, the channel will be filled with 0."
    )
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.WritePrismBaseNatronOfxParamProcessG = param
    del param

    param = lastNode.createBooleanParam("WritePrismBaseNatronOfxParamProcessB", "B")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp(
        "When checked, this channel of the layer will be written to the file otherwise it will be skipped. Most file formats will pack the channels into the first N channels of the file. If for some reason it's not possible, the channel will be filled with 0."
    )
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.WritePrismBaseNatronOfxParamProcessB = param
    del param

    param = lastNode.createBooleanParam("WritePrismBaseNatronOfxParamProcessA", "A")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp(
        "When checked, this channel of the layer will be written to the file otherwise it will be skipped. Most file formats will pack the channels into the first N channels of the file. If for some reason it's not possible, the channel will be filled with 0."
    )
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.WritePrismBaseNatronOfxParamProcessA = param
    del param

    param = lastNode.createChoiceParam("WritePrismBaseframeRange", "Frame Range")
    param.setDefaultValue(1)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.WritePrismBaseframeRange = param
    del param

    param = lastNode.createIntParam("WritePrismBasefirstFrame", "First Frame")
    param.setDefaultValue(1001, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setVisible(False)
    lastNode.WritePrismBasefirstFrame = param
    del param

    param = lastNode.createIntParam("WritePrismBaselastFrame", "Last Frame")
    param.setDefaultValue(1100, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setVisible(False)
    lastNode.WritePrismBaselastFrame = param
    del param

    param = lastNode.createSeparatorParam("seperator2", "")

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.seperator2 = param
    del param

    param = lastNode.createStringParam("fileName", "Filepath (read-only)")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.fileName = param
    del param

    param = lastNode.createChoiceParam("outputFormat", "Output format")
    entries = [("exr", ""), ("jpg", ""), ("png", ""), ("tiff", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.outputFormat = param
    del param

    param = lastNode.createButtonParam("refresh", "Refresh")

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.refresh = param
    del param

    param = lastNode.createButtonParam("createDir", "Create directory")

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.createDir = param
    del param

    param = lastNode.createButtonParam("openDir", "Open in explorer")

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.openDir = param
    del param

    param = lastNode.createSeparatorParam("seperator3", "")

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.seperator3 = param
    del param

    param = lastNode.createButtonParam("b_startRender", "Render")

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.b_startRender = param
    del param

    param = lastNode.createButtonParam(
        "b_startRenderLastVersion", "Render as previous version"
    )

    # Add the param to the page
    lastNode.prismPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.b_startRenderLastVersion = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(["prismPage", "Node", "Settings"])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "WritePrismBase"
    lastNode = app.createNode("fr.inria.built-in.Write", 1, group)
    lastNode.setScriptName("WritePrismBase")
    lastNode.setLabel("WritePrismBase")
    lastNode.setPosition(596, 140)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.75, 0.75, 0)
    groupWritePrismBase = lastNode

    param = lastNode.getParam("encodingPluginID")
    if param is not None:
        param.setValue("fr.inria.openfx.WriteOIIO")
        del param

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.set("project")
        del param

    param = lastNode.getParam("firstFrame")
    if param is not None:
        param.setValue(1001, 0)
        del param

    param = lastNode.getParam("lastFrame")
    if param is not None:
        param.setValue(1100, 0)
        del param

    param = lastNode.getParam("ParamExistingInstance")
    if param is not None:
        param.setValue(True)
        del param

    # Create the user parameters
    lastNode.Prism = lastNode.createPageParam("Prism", "Prism")
    param = lastNode.createStringParam("prismTask", "Task")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.Prism.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setEnabled(False, 0)
    lastNode.prismTask = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(["Controls", "Node", "Info", "Prism"])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "WritePrismBase"

    # Start of node "WritePrism_Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("WritePrism_Source")
    lastNode.setLabel("WritePrism_Source")
    lastNode.setPosition(596, 25)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupWritePrism_Source = lastNode

    del lastNode
    # End of node "WritePrism_Source"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("WritePrismOutput")
    lastNode.setPosition(596, 282)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupWritePrismBase.connectInput(0, groupWritePrism_Source)
    groupOutput1.connectInput(0, groupWritePrismBase)

    param = groupWritePrismBase.getParam("frameRange")
    group.getParam("WritePrismBaseframeRange").setAsAlias(param)
    del param
    param = groupWritePrismBase.getParam("firstFrame")
    group.getParam("WritePrismBasefirstFrame").setAsAlias(param)
    del param
    param = groupWritePrismBase.getParam("lastFrame")
    group.getParam("WritePrismBaselastFrame").setAsAlias(param)
    del param
    param = groupWritePrismBase.getParam("prismTask")
    group.getParam("prismTask").setAsAlias(param)
    del param

    try:
        extModule = sys.modules["WritePrismExt"]
    except KeyError:
        extModule = None
    if (
        extModule is not None
        and hasattr(extModule, "createInstanceExt")
        and hasattr(extModule.createInstanceExt, "__call__")
    ):
        extModule.createInstanceExt(app, group)
